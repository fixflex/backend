{
    "openapi": "3.0.0",
    "info": {
        "title": "khidma API",
        "description": "API for khidam Application",
        "contact": {
            "name": "khidma",
            "url": "https://khidma.websites.co.in",
            "email": "ahmed.elasiriy@gmail.com"
        },
        "version": "1.0.0"
    },
    "schemes": ["http", "https"],
    "servers": [
        {
            "url": "{serverUrl}/api/{apiVersion}",
            "variables": {
                "serverUrl": {
                    "default": "https://khidma.onrender.com",
                    "enum": ["https://khidma.onrender.com", "http://localhost:8080"]
                },
                "apiVersion": {
                    "default": "v1"
                }
            }
        }
    ],
    "tags": [
        {
            "name": "Healthz",
            "description": "Health check endpoint"
        },
        {
            "name": "Auth",
            "description": "Operations about authentication"
        },
        {
            "name": "OAuth",
            "description": "Operations about OAuth"
        },
        {
            "name": "Users",
            "description": "Operations about users"
        },
        {
            "name": "Taskers",
            "description": "Operations about taskers"
        },
        {
            "name": "Tasks",
            "description": "Operations about tasks"
        },
        {
            "name": "Offers",
            "description": "Operations about offers"
        },
        {
            "name": "Services"
        },
        {
            "name": "Chats"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": ["Healthz"],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "tags": ["Healthz"],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": ["Auth"],
                "summary": "Register a new user",
                "requestBody": {
                    "description": "Create a new user",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User login",
                "requestBody": {
                    "description": "User login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "User logged out successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/google": {
            "post": {
                "tags": ["OAuth"],
                "summary": "Google login",
                "requestBody": {
                    "description": "Google login",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "credential": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/forgotPassword": {
            "post": {
                "tags": ["Auth"],
                "summary": "Forgot password",
                "requestBody": {
                    "description": "Forgot password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Email sent successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/verifyResetCode": {
            "post": {
                "tags": ["Auth"],
                "summary": "Verify reset code",
                "requestBody": {
                    "description": "Verify reset code",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "resetCode": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Code verified successfully"
                    },
                    "400": {
                        "description": "Invalid reset code or the code is expired"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/resetPassword": {
            "patch": {
                "tags": ["Auth"],
                "summary": "Reset password",
                "requestBody": {
                    "description": "Reset password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "newPassword": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "tags": ["Users"],
                "summary": "Get logged-in user details",
                "description": "Get logged-in user details\n\n**Note:** This endpoint requires the user to be authenticated.",
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "firstName": {
                                            "type": "string"
                                        },
                                        "lastName": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string"
                                        },
                                        "profilePicture": {
                                            "type": "object",
                                            "properties": {
                                                "url": {
                                                    "type": "string"
                                                },
                                                "publicId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": ["Users"],
                "summary": "Update logged-in user profile",
                "requestBody": {
                    "description": "Update logged-in user profile",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Users"],
                "summary": "Delete logged-in user",
                "responses": {
                    "204": {
                        "description": "User deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/me/change-password": {
            "patch": {
                "tags": ["Users"],
                "summary": "Change logged-in user password",
                "requestBody": {
                    "description": "Change logged-in user password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/me/profile-picture-upload": {
            "patch": {
                "tags": ["Users"],
                "summary": "Upload profile picture",
                "description": "Upload profile picture for the logged-in user. \n\n**Note:** This endpoint requires the user to be authenticated.",
                "requestBody": {
                    "description": "Upload profile picture",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Profile picture uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taskers/{userId}": {
            "get": {
                "tags": ["Taskers"],
                "summary": "Get tasker details",
                "description": "Get tasker details by userId\n\n**Note:** This endpoint is public.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Tasker ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "5f9b2b3b9d9b4b0017b3e6a0"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tasker details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasker"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tasker not found"
                    }
                }
            }
        },
        "/taskers/me": {
            "get": {
                "tags": ["Taskers"],
                "summary": "Get logged-in tasker profile",
                "responses": {
                    "200": {
                        "description": "Tasker details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasker"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": ["Taskers"],
                "summary": "Update logged-in tasker profile",
                "requestBody": {
                    "description": "Update logged-in tasker profile",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskerUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Tasker updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasker"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Taskers"],
                "summary": "Delete logged-in tasker",
                "responses": {
                    "204": {
                        "description": "Tasker deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/taskers": {
            "get": {
                "tags": ["Taskers"],
                "summary": "Get list of taskers",
                "description": "Get a list of taskers filtered and ordered by location. \n\n**Query Parameters:**\n\n* `services` (*optional*): Filter taskers by service(s). Can pass a single service or comma separated list.\n* `longitude` (*optional*): User's longitude location.\n* `latitude` (*optional*): User's latitude location.\n* `maxDistance` (*optional*, default: `60`): Maximum distance in km to search.\n\nIf location parameters are provided, taskers will be returned sorted by proximity to the given point. \n\n_If no parameters are provided, taskers will be returned randomly without filtering or sorting._",
                "parameters": [
                    {
                        "name": "services",
                        "in": "query",
                        "description": "Service ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "latitude",
                        "in": "query",
                        "description": "User's latitude",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "longitude",
                        "in": "query",
                        "description": "User's longitude",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "maxDistance",
                        "in": "query",
                        "description": "Maximum distance in kilometers",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get list of taskers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tasker"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request"
                }
            }
        },
        "/taskers/become-tasker": {
            "post": {
                "tags": ["Taskers"],
                "summary": "Become a tasker",
                "description": "Register a new taskers. The user must be authenticated with a valid JWT bearer token.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "location": {
                                        "type": "object",
                                        "properties": {
                                            "coordinates": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number"
                                                }
                                            }
                                        },
                                        "required": ["coordinates"]
                                    },
                                    "phoneNumber": {
                                        "type": "string"
                                    }
                                },
                                "required": ["services", "location", "phoneNumber"]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tasker created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tasker"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get list of tasks",
                "responses": {
                    "200": {
                        "description": "Get list of tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Task"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "post": {
                "tags": ["Tasks"],
                "summary": "Create a new task",
                "description": "Creates a new task record. This route is intended for administrative users but for now any logged in user can create a task for testing purposes.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks/{taskId}": {
            "get": {
                "tags": ["Tasks"],
                "summary": "Get task by ID",
                "description": "Get a specific task by its unique ID. This endpoint allows you to retrieve a detailed task information.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found"
                    }
                }
            },
            "patch": {
                "tags": ["Tasks"],
                "summary": "Update task",
                "description": "Update a task by its unique ID. This endpoint allows you to update a task's details. \n\n**Note:** This endpoint requires the user to be authenticated.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update task",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Tasks"],
                "summary": "Delete task",
                "description": "Delete a task by its unique ID. This endpoint allows you to delete a task. \n\n**Note:** This endpoint requires the user to be authenticated.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Task not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/offers": {
            "get": {
                "tags": ["Offers"],
                "summary": "Get list of offers",
                "description": "Get a list of offers filtered by task ID. \n\n**Query Parameters:**\n\n* `taskId` (*optional*): Filter offers by task ID.\n\nIf no parameters are provided, offers will be returned randomly without filtering or sorting.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "query",
                        "description": "Task ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get list of offers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Offer"
                                    }
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request"
                }
            },
            "post": {
                "tags": ["Offers"],
                "summary": "Create a new offer",
                "description": "only tasker can create offer for a task.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OfferInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Offer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tasks/{taskId}/images": {
            "patch": {
                "tags": ["Tasks"],
                "summary": "Upload task images",
                "description": "Upload task images for the logged-in user. \n\n**Note:** This endpoint requires the user to be authenticated.",
                "parameters": [
                    {
                        "name": "taskId",
                        "in": "path",
                        "description": "Task ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Upload task images",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imageCover": {
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "image": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Task images uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/offers/{offerId}": {
            "get": {
                "tags": ["Offers"],
                "summary": "Get offer by ID",
                "description": "Get a specific offer by its unique ID. This endpoint allows you to retrieve a detailed offer information.",
                "parameters": [
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Offer details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Offer not found"
                    }
                }
            },
            "patch": {
                "tags": ["Offers"],
                "summary": "Update offer",
                "description": "Update an offer by its unique ID. This endpoint allows you to update an offer's details. \n\n**Note:** This endpoint requires the user to be authenticated.",
                "parameters": [
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update offer",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OfferInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Offer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Offer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": ["Offers"],
                "summary": "Delete offer",
                "description": "Delete an offer by its unique ID. This endpoint allows you to delete an offer. \n\n**Note:** This endpoint requires the user to be authenticated.",
                "parameters": [
                    {
                        "name": "offerId",
                        "in": "path",
                        "description": "Offer ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Offer deleted successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Offer not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/services": {
            "get": {
                "tags": ["Services"],
                "summary": "Get list of services",
                "description": "Get a list of all services that taskers can provide. \n\n**Note:** This endpoint not requires authentication.",
                "responses": {
                    "200": {
                        "description": "Get list of services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["Services"],
                "summary": "Create a new service",
                "description": "Creates a new service record. This route is intended for administrative users but for now any logged in user can create a service for testing purposes.",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ServiceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/services/upload-service-image/{servicId}": {
            "patch": {
                "tags": ["Services"],
                "summary": "Upload service image",
                "description": "Upload service image for the logged-in user. \n\n**Note:** This endpoint only for admin user.",
                "parameters": [
                    {
                        "name": "servicId",
                        "in": "path",
                        "description": "Service ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Upload service image",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Service image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats": {
            "get": {
                "tags": ["Chats"],
                "summary": "Get user's chat list",
                "description": "Get a list of chats associated with the logged-in user. Each chat represents a conversation with other users or taskers. **Note:** Requires authentication.",
                "responses": {
                    "200": {
                        "description": "List of user's chats",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Chat"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": ["Chats"],
                "summary": "Create a new chat",
                "description": "Start a new chat with another user or tasker. This allows users to initiate conversations and send messages to other participants. **Note:** Requires authentication.",
                "requestBody": {
                    "description": "Create a new chat",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateChatInput"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Chat created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Chat"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/chats/{id}": {
            "get": {
                "tags": ["Chats"],
                "summary": "Get chat by ID",
                "description": "Get a specific chat by its unique ID. This endpoint allows you to retrieve a detailed conversation between the user and other users or taskers. **Note:** Requires authentication.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Chat ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "_id": {
                                            "type": "string"
                                        },
                                        "client": {
                                            "type": "string"
                                        },
                                        "tasker": {
                                            "type": "string"
                                        },
                                        "messages": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "_id": {
                                                        "type": "string"
                                                    },
                                                    "sender": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chat not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "profilePicture": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "publicId": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": ["_id", "firstName", "lastName", "email", "profilePicture"]
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": ["email", "password"]
            },
            "AuthResponse": {
                "type": "object",
                "properties": {
                    "data": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            }
                        },
                        "required": ["_id", "email", "firstName", "lastName"]
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": ["data", "token"]
            },
            "Tasker": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "services": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rating": {
                        "type": "number"
                    },
                    "completedTasks": {
                        "type": "integer"
                    },
                    "location": {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": ["Point"]
                            }
                        }
                    }
                },
                "required": ["_id", "userId", "services", "rating", "completedTasks", "location", "createdAt", "updatedAt"]
            },
            "Task": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "location": {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": ["Point"]
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": ["open", "assigned", "completed", "cancelled"]
                    },
                    "service": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TaskUpdate": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "location": {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": ["Point"]
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": ["open", "assigned", "completed", "cancelled"]
                    },
                    "service": {
                        "type": "string"
                    }
                }
            },
            "TaskInput": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "location": {
                        "type": "object",
                        "properties": {
                            "coordinates": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                }
                            },
                            "type": {
                                "type": "string",
                                "enum": ["Point"]
                            }
                        }
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "service": {
                        "type": "string"
                    }
                },
                "required": ["title", "details", "location", "status", "service"]
            },
            "Offer": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "taskId": {
                        "type": "string"
                    },
                    "taskerId": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "subMessages": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "sender": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                },
                                "createdAt": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "OfferInput": {
                "type": "object",
                "properties": {
                    "taskId": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": ["taskId", "message"]
            },
            "Service": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "publicId": {
                                "type": "string"
                            }
                        }
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "ServiceInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": ["name", "description"]
            },
            "UserUpdate": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "profilePicture": {
                        "type": "object",
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "publicId": {
                                "type": "string"
                            }
                        }
                    }
                },
                "required": []
            },
            "ChangePasswordInput": {
                "type": "object",
                "properties": {
                    "oldPassword": {
                        "type": "string"
                    },
                    "newPassword": {
                        "type": "string"
                    }
                },
                "required": ["oldPassword", "newPassword"]
            },
            "Chat": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "Chat ID"
                    },
                    "client": { "type": "string" },
                    "tasker": { "type": "string" }
                }
            },
            "CreateChatInput": {
                "type": "object",
                "properties": {
                    "client": {
                        "type": "string"
                    },
                    "tasker": {
                        "type": "string"
                    }
                },
                "required": ["participants"]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "in": "header",
                "flows": {
                    "implicit": {
                        "authorizationUrl": "https://fixflex.onrender.com/auth/login"
                    }
                }
            }
        }
    }
}

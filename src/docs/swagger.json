{
  "swagger": "2.0",
  "info": {
    "description": "API for TasksRunner Application",
    "version": "1.0.0",
    "title": "TasksRunner API"
  },

  "host": "localhost:8080",
  "basePath": "/api/v1",
  "schemes": ["http", "https"],

  "servers": [
    {
      "url": "http://localhost:8080/api/v1",
      "description": "Local server"
    },
    {
      "url": "https://tasksrunner.onrender.com/api/v1",
      "description": "Production server"
    }
  ],

  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "Healthz"
    },
    {
      "name": "Auth"
    },
    {
      "name": "Taskers"
    },
    {
      "name": "Services"
    },
    {
      "name": "Users"
    }
  ],
  "paths": {
    "/healthz": {
      "get": {
        "tags": ["Healthz"],
        "summary": "Health check endpoint",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signup",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSignup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/SignupResponse"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User credentials (email or username and password)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/taskers": {
      "get": {
        "tags": ["Taskers"],
        "summary": "Get list of taskers",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get list of taskers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Tasker"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Taskers"],
        "summary": "Create a new tasker",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "tasker",
            "in": "body",
            "description": "Tasker details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TaskerInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Tasker created successfully",
            "schema": {
              "$ref": "#/definitions/Tasker"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/services": {
      "get": {
        "tags": ["Services"],
        "summary": "Get list of services",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get list of services",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Service"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": ["Services"],
        "summary": "Create a new service",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "service",
            "in": "body",
            "description": "Service details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ServiceInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Service created successfully",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get logged-in user details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update logged-in user profile",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Updated user profile details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete logged-in user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "UserSignup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      },
      "required": ["name", "email", "username", "password", "confirmPassword"]
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "emailOrUsername": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["emailOrUsername", "password"]
    },
    "SignupResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["_id", "email", "username"]
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["data", "token"]
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["_id", "email", "username"]
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["data", "token"]
    },
    "Tasker": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "specialization": {
          "type": "string"
        },
        "rating": {
          "type": "number"
        }
      }
    },
    "TaskerInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "specialization": {
          "type": "string"
        }
      },
      "required": ["name", "specialization"]
    },
    "Service": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      }
    },
    "ServiceInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "number"
        }
      },
      "required": ["name", "description", "price"]
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "profilePicture": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          }
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "profilePicture": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}
